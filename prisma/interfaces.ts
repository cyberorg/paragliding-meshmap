// This file was auto-generated by prisma-generator-typescript-interfaces

export interface Node {
  id: bigint
  nodeId: bigint
  longName: string | null
  shortName: string | null
  hardwareModel: number | null
  isLicensed: boolean | null
  role: number | null
  altitude: number | null
  latitude: number | null
  longitude: number | null
  positionUpdatedAt: string | null
  airUtilTx: number | null
  batteryLevel: number | null
  channelUtilization: number | null
  voltage: number | null
  neighbourBroadcastIntervalSecs: number | null
  neighboursUpdatedAt: string | null
  mqttConnectionState: string | null
  mqttConnectionStateUpdatedAt: string | null
  firmwareVersion: string | null
  hasDefaultChannel: boolean | null
  modemPreset: number | null
  numOnlineLocalNodes: number | null
  positionPrecision: number | null
  region: number | null
  uptimeSeconds: bigint | null
  barometricPressure: number | null
  relativeHumidity: number | null
  temperature: number | null
  neighbours: JsonValue[]
  inbox: JsonValue[]
  outbox: JsonValue[]
  createdAt: string
  updatedAt: string
}

export interface MapReport {
  id: bigint
  nodeId: bigint
  shortName: string
  longName: string
  role: number | null
  hardwareModel: number
  firmwareVersion: string
  region: number | null
  modemPreset: number | null
  hasDefaultChannel: boolean | null
  latitude: number | null
  longitude: number | null
  altitude: number | null
  positionPrecision: number | null
  numOnlineLocalNodes: number | null
  createdAt: string
  updatedAt: string
}

export interface NeighbourInfo {
  id: bigint
  nodeId: bigint
  nodeBroadcastIntervalSecs: number
  neighbours: JsonValue[]
  createdAt: string
  updatedAt: string
}

export interface DeviceMetric {
  id: bigint
  nodeId: bigint
  batteryLevel: number | null
  voltage: number | null
  channelUtilization: number | null
  airUtilTx: number | null
  uptimeSeconds: bigint | null
  createdAt: string
  updatedAt: string
}

export interface EnvironmentMetric {
  id: bigint
  nodeId: bigint
  temperature: number | null
  relativeHumidity: number | null
  barometricPressure: number | null
  gasResistance: number | null
  voltage: number | null
  current: number | null
  iaq: number | null
  createdAt: string
  updatedAt: string
}

export interface PowerMetric {
  id: bigint
  nodeId: bigint
  ch1Voltage: number | null
  ch1Current: number | null
  ch2Voltage: number | null
  ch2Current: number | null
  ch3Voltage: number | null
  ch3Current: number | null
  createdAt: string
  updatedAt: string
}

export interface Position {
  id: bigint
  nodeId: bigint
  to: bigint
  from: bigint
  channel: number | null
  packetId: bigint | null
  channelId: string | null
  gatewayId: bigint | null
  latitude: number | null
  longitude: number | null
  altitude: number | null
  createdAt: string
  updatedAt: string
}

export interface ServiceEnvelopes {
  id: bigint
  mqttTopic: string
  channelId: string
  gatewayId: bigint | null
  to: bigint | null
  from: bigint | null
  protobuf: Buffer
  createdAt: string
  updatedAt: string
}

export interface TextMessages {
  id: bigint
  channel: number
  channelId: string
  gatewayId: bigint | null
  packetId: bigint
  to: bigint
  from: bigint
  text: string
  wantResponse: boolean | null
  hopLimit: number | null
  rxSnr: number | null
  rxRssi: number | null
  rxTime: bigint | null
  createdAt: string
  updatedAt: string
}

export interface TraceRoute {
  id: bigint
  from: bigint
  to: bigint
  route: JsonValue[]
  wantResponse: boolean
  channel: number | null
  channelId: string | null
  gatewayId: bigint | null
  packetId: bigint | null
  createdAt: string
  updatedAt: string
}

export interface Waypoint {
  id: bigint
  from: bigint
  to: bigint
  waypointId: bigint
  latitude: number
  longitude: number
  expire: bigint | null
  lockedTo: bigint | null
  name: string | null
  description: string | null
  icon: number | null
  channel: number
  packetId: bigint
  channelId: string
  gatewayId: bigint | null
  createdAt: string
  updatedAt: string
}

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | Array<JsonValue> | null
