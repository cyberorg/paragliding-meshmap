// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
  dateType = "string"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Node {
  id                             BigInt    @id @default(autoincrement())
  nodeId                         BigInt    @unique
  longName                       String?   @db.Text
  shortName                      String?   @db.Text
  hardwareModel                  Int?
  isLicensed                     Boolean?
  role                           Int?
  altitude                       Int?
  latitude                       Int?
  longitude                      Int?
  positionUpdatedAt              DateTime?
  airUtilTx                      Decimal?
  batteryLevel                   Int?
  channelUtilization             Decimal?
  voltage                        Decimal?
  neighbourBroadcastIntervalSecs Int?
  neighboursUpdatedAt            DateTime?
  mqttConnectionState            String?   @db.Text
  mqttConnectionStateUpdatedAt   DateTime?
  firmwareVersion                String?   @db.Text
  hasDefaultChannel              Boolean?
  modemPreset                    Int?
  numOnlineLocalNodes            Int?
  positionPrecision              Int?
  region                         Int?
  uptimeSeconds                  BigInt?
  barometricPressure             Decimal?
  relativeHumidity               Decimal?
  temperature                    Decimal?

  /// [Neighbours]
  neighbours Json[]
  /// [MessageIn]
  inbox      Json[]
  /// [MessageOut]
  outbox     Json[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("nodes")
}

model MapReport {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  shortName           String   @db.Text
  longName            String   @db.Text
  role                Int?
  hardwareModel       Int
  firmwareVersion     String   @db.Text
  region              Int?
  modemPreset         Int?
  hasDefaultChannel   Boolean?
  latitude            Int?
  longitude           Int?
  altitude            Int?
  positionPrecision   Int?
  numOnlineLocalNodes Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("map_eports")
}

model NeighbourInfo {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  nodeBroadcastIntervalSecs Int
  /// [Neighbours]
  neighbours                Json[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("neighbour_infos")
}

model DeviceMetric {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  batteryLevel       Int?
  voltage            Decimal?
  channelUtilization Decimal?
  airUtilTx          Decimal?
  uptimeSeconds      BigInt?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("device_metrics")
}

model EnvironmentMetric {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  temperature        Decimal?
  relativeHumidity   Decimal?
  barometricPressure Decimal?
  gasResistance      Decimal?
  voltage            Decimal?
  current            Decimal?
  iaq                Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("environment_metrics")
}

model PowerMetric {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  ch1Voltage Decimal?
  ch1Current Decimal?
  ch2Voltage Decimal?
  ch2Current Decimal?
  ch3Voltage Decimal?
  ch3Current Decimal?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("power_metrics")
}

model Position {
  id     BigInt @id @default(autoincrement())
  nodeId BigInt

  to        BigInt
  from      BigInt
  channel   Int?
  packetId  BigInt?
  channelId String? @db.Text
  gatewayId BigInt?
  latitude  Int?
  longitude Int?
  altitude  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@index([nodeId])
  @@map("positions")
}

model ServiceEnvelopes {
  id BigInt @id @default(autoincrement())

  mqttTopic String  @db.Text
  channelId String  @db.Text
  gatewayId BigInt?
  to        BigInt?
  from      BigInt?
  protobuf  Bytes

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@map("service_envelopes")
}

model TextMessages {
  id BigInt @id @default(autoincrement())

  channel   Int
  channelId String  @db.Text
  gatewayId BigInt?
  packetId  BigInt

  to   BigInt
  from BigInt
  text String @db.Text

  wantResponse Boolean?
  hopLimit     Int?

  rxSnr  Decimal?
  rxRssi Int?
  rxTime BigInt?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@map("text_messages")
}

model TraceRoute {
  id BigInt @id @default(autoincrement())

  from         BigInt
  to           BigInt
  /// [Route]
  route        Json[]
  wantResponse Boolean

  channel   Int?
  channelId String? @db.Text
  gatewayId BigInt?
  packetId  BigInt?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@map("traceroutes")
}

model Waypoint {
  id BigInt @id @default(autoincrement())

  from       BigInt
  to         BigInt
  waypointId BigInt
  latitude   Int
  longitude  Int

  expire      BigInt?
  lockedTo    BigInt?
  name        String? @db.Text
  description String? @db.Text
  icon        Int?

  channel   Int
  packetId  BigInt
  channelId String  @db.Text
  gatewayId BigInt?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
  @@index([updatedAt])
  @@map("waypoints")
}
