#!/usr/bin/env node

import Hgt from 'node-hgt';
import path from 'path';
import fs from 'fs';

function loadHgt(directory, lat, lon) {
    const degreesLat = Math.floor(lat);
    const degreesLon = Math.floor(lon);
    const prefix = (lat >= 0 ? 'N' : 'S') + degreesLat.toString().padStart(2, '0');
    const suffix = (lon >= 0 ? 'E' : 'W') + degreesLon.toString().padStart(3, '0');
    const filename = path.join(directory, prefix + suffix + ".HGT");
    if (!fs.existsSync(filename))
	return null;
    return new Hgt.Hgt(path.join(directory, prefix + suffix + ".HGT"),
                       [degreesLat, degreesLon]);
}

function lookupHgt(lat, lon) {
    const hgt = loadHgt(path.join(import.meta.dirname, '..', 'hgt'), lat, lon);

    if (!hgt) {
	console.warn("agl-lookup: no HGT data available for these coordinates");
	return NaN;
    }

    // Return elevation in meters above sea level.
    // By default, elevation is interpolated bilinearly.
    return hgt.getElevation([lat, lon]);
}

if (process.argv.length != 4) {
    console.error('agl-lookup: Specify the latitude and longitude on command line');
    process.exit(2);
}

const lat = parseFloat(process.argv[2]);
const lon = parseFloat(process.argv[3]);

if (isNaN(lat) || isNaN(lon)) {
    console.error('agl-lookup: Specify latitude and longitude as numbers');
    console.exit(2);
}

console.log(lookupHgt(lat, lon));
